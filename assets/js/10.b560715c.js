(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{283:function(a,t,s){"use strict";s.r(t);var r=s(14),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[a._v("#")]),a._v(" js")]),a._v(" "),t("h2",{attrs:{id:"let-const-var-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#let-const-var-区别"}},[a._v("#")]),a._v(" let const var 区别")]),a._v(" "),t("h3",{attrs:{id:"var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[a._v("#")]),a._v(" var")]),a._v(" "),t("ol",[t("li",[a._v("声明提升")]),a._v(" "),t("li",[a._v("没有块级作用域")]),a._v(" "),t("li",[a._v("可以重复声明,变量覆盖")]),a._v(" "),t("li",[a._v("在全局上下文中var声明的会挂载到window上")])]),a._v(" "),t("h3",{attrs:{id:"let-const"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#let-const"}},[a._v("#")]),a._v(" let const")]),a._v(" "),t("ol",[t("li",[a._v("不允许重复声明")]),a._v(" "),t("li",[a._v("仅在块级作用域下有效")]),a._v(" "),t("li",[a._v("不存在变量提升")])]),a._v(" "),t("h3",{attrs:{id:"const"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[a._v("#")]),a._v(" const")]),a._v(" "),t("ol",[t("li",[a._v("用于声明常量,不允许重新赋值,基本类型不可改,引用类型可改(内存地址未变即可)")]),a._v(" "),t("li",[a._v("声明时需赋值")])]),a._v(" "),t("h2",{attrs:{id:"块级作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[a._v("#")]),a._v(" 块级作用域")]),a._v(" "),t("p",[a._v("块级作用域指的是用一大段花括号包裹起来的代码，比如函数、判断语句、循环语句或者一个单独的 {}")]),a._v(" "),t("h2",{attrs:{id:"函数作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域"}},[a._v("#")]),a._v(" 函数作用域")]),a._v(" "),t("p",[a._v("属于这个函数的全部变量都可以在整个函数的范围内使用及复用")]),a._v(" "),t("h2",{attrs:{id:"事件循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[a._v("#")]),a._v(" 事件循环")]),a._v(" "),t("h2",{attrs:{id:"微任务-宏任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微任务-宏任务"}},[a._v("#")]),a._v(" 微任务 宏任务")]),a._v(" "),t("h2",{attrs:{id:"async-await-与promise-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-await-与promise-区别"}},[a._v("#")]),a._v(" async await 与promise 区别")]),a._v(" "),t("p",[a._v("async await 最终返回的一个promise对象")]),a._v(" "),t("h2",{attrs:{id:"map-foreach-filter-reduce"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map-foreach-filter-reduce"}},[a._v("#")]),a._v(" map forEach filter reduce")])])}),[],!1,null,null,null);t.default=e.exports}}]);